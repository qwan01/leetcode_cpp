class Solution {
public:
double findMedian(int A[], int m, int B[], int n, int count) {
	if (m > n)
		return findMedian(B, n, A, m, count);

	if (m == 0)
		return B[count - 1];

	if (count == 1)
		return min(A[0], B[0]);

	int countA = min(m, count/2);
	int countB = count - countA;

	if (A[countA - 1] <= B[countB - 1])
		return findMedian(A + countA, m - countA, B, n, count - countA);
	else
		return findMedian(A, m, B + countB, n - countB, count - countB);
}

double findMedianSortedArrays(int A[], int m, int B[], int n) {
	int num = m + n;

	if (num % 2 == 1)
		return findMedian(A, m, B, n, num/2 + 1);
	else
		return (findMedian(A, m, B, n, num/2) + findMedian(A, m, B, n, num/2 + 1)) / 2.0;
}
};
